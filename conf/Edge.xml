<?xml version="1.0" encoding="UTF-8"?>

<Server version="8">
	<Name>OvenMediaEngine</Name>
	<!-- Host type (origin/edge) -->
	<Type>edge</Type>
	<!-- Specify IP address to bind (* means all IPs) -->
	<IP>*</IP>
	<PrivacyProtection>false</PrivacyProtection>

	<!-- 
	To get the public IP address(mapped address of stun) of the local server. 
	This is useful when OME cannot obtain a public IP from an interface, such as AWS or docker environment. 
	If this is successful, you can use ${PublicIP} in your settings.
	-->
	<StunServer>stun.l.google.com:19302</StunServer>

	<Modules>
		<!-- 
		Currently OME only supports h2 like all browsers do. Therefore, HTTP/2 only works on TLS ports.			
		-->
		<HTTP2>
			<Enable>true</Enable>
		</HTTP2>

		<LLHLS>
			<Enable>true</Enable>
		</LLHLS>

		<!-- P2P works only in WebRTC and is experiment feature -->
		<P2P>
			<!-- disabled by default -->
			<Enable>false</Enable>
			<MaxClientPeersPerHostPeer>2</MaxClientPeersPerHostPeer>
		</P2P>
	</Modules>

	<!-- Settings for the ports to bind -->
	<Bind>
		<!-- Enable this configuration if you want to use API Server -->
		<!--
		<Managers>
			<API>
				<Port>${env:OME_API_PORT:8081}</Port>
				<WorkerCount>1</WorkerCount>
			</API>
		</Managers>
		-->
		<Providers>
			<!-- Pull providers -->
			<RTSPC>
				<WorkerCount>1</WorkerCount>
			</RTSPC>
			<OVT>
				<WorkerCount>1</WorkerCount>
			</OVT>
		</Providers>

		<Publishers>
			<LLHLS>
				<!-- 
				OME only supports h2, so LLHLS works over HTTP/1.1 on non-TLS port. 
				Note that LLHLS runs higher performance over HTTP/2.
				Therefore, it is recommended to use TLS Port.
				-->
				<Port>${env:OME_LLHLS_STREAM_PORT:3333}</Port>
				<TLSPort>${env:OME_LLHLS_STREAM_TLS_PORT:3334}</TLSPort>
				<WorkerCount>1</WorkerCount>
			</LLHLS>
			<WebRTC>
				<Signalling>
					<Port>${env:OME_SIGNALLING_PORT:3333}</Port>
					<TLSPort>${env:OME_SIGNALLING_TLS_PORT:3334}</TLSPort>
					<WorkerCount>1</WorkerCount>
				</Signalling>
				<IceCandidates>
					<IceCandidate>*:10000-10005/udp</IceCandidate>
					<TcpRelay>${env:OME_TCP_RELAY_ADDRESS:*:3478}</TcpRelay>
					<TcpForce>true</TcpForce>
					<TcpRelayWorkerCount>1</TcpRelayWorkerCount>
				</IceCandidates>
			</WebRTC>
		</Publishers>
	</Bind>

	<!-- P2P works only in WebRTC -->
	<P2P>
		<MaxClientPeersPerHostPeer>2</MaxClientPeersPerHostPeer>
	</P2P>


	<VirtualHosts>
		<!-- You can use wildcard like this to include multiple XMLs -->
		<VirtualHost include="VHost*.xml" />
		<VirtualHost>
			<Name>app</Name>
			<!--Distribution is a value that can be used when grouping the same vhost distributed across multiple servers. This value is output to the events log, so you can use it to aggregate statistics. -->
			<Distribution>ovenmediaengine.com</Distribution>

			<!-- Settings for multi ip/domain and TLS -->
			<Host>
				<Names>
					<!-- Host names
						<Name>stream1.airensoft.com</Name>
						<Name>stream2.airensoft.com</Name>
						<Name>*.sub.airensoft.com</Name>
						<Name>192.168.0.1</Name>
					-->
					<Name>*</Name>
				</Names>
				<!--
				<TLS>
					<CertPath>path/to/file.crt</CertPath>
					<KeyPath>path/to/file.key</KeyPath>
					<ChainCertPath>path/to/file.crt</ChainCertPath>
				</TLS>
				-->
			</Host>

			<!-- Refer https://airensoft.gitbook.io/ovenmediaengine/signedpolicy

			<SignedPolicy>
				<PolicyQueryKeyName>${env:SIGNED_POLICY_POLICY_QUERY_KEY:policy}</PolicyQueryKeyName>
				<SignatureQueryKeyName>${env:SIGNED_POLICY_SIGNATURE_QUERY_KEY:signature}</SignatureQueryKeyName>
				<SecretKey>${env:SIGNED_URL_CRYPTO_KEY:aKq#1kj}</SecretKey>

				<Enables>
					<Providers>rtmp,webrtc,srt</Providers>
					<Publishers>webrtc,hls,dash,lldash</Publishers>
				</Enables>
			</SignedPolicy>
			-->

			<!-- Settings for ProxyPass (It can specify origin for each path) -->
			<Origins>
				<Properties>
					<NoInputFailoverTimeout>3000</NoInputFailoverTimeout>
					<UnusedStreamDeletionTimeout>60000</UnusedStreamDeletionTimeout>
				</Properties>
				<!--
					<Origin>
					<Location>/app/stream</Location>
					<Pass>
						<Scheme>ovt</Scheme>
						<Urls>
							<Url>origin.com:9000/app/stream_720p</Url>
						</Urls>
					</Pass>
				</Origin>
				<Origin>
					<Location>/app/</Location>
					<Pass>
						<Scheme>ovt</Scheme>
						<Urls>
							<Url>origin.com:9000/app/</Url>
						</Urls>
					</Pass>
				</Origin>
				-->
				<Origin>
					<Location>/app/</Location>
					<Pass>
						<Scheme>OVT</Scheme>
						<Urls>
							<Url>${env:DEFAULT_ORIGIN_SERVER:}:${env:DEFAULT_ORIGIN_PORT:9000}/app/</Url>
						</Urls>
						<!-- 
							Whether to pass the query string to the origin server in the URL the user requested to play (used by some RTSP servers) 
							default : true
						-->
						<ForwardQueryParams>true</ForwardQueryParams>
					</Pass>
				</Origin>
			</Origins>

			<AdmissionWebhooks>
				<ControlServerUrl>${env:DEFAULT_API_SERVER:http://172.17.0.1:8000/hooks/ome/admission}</ControlServerUrl>
				<SecretKey>1234</SecretKey>
				<Timeout>3000</Timeout>
				<Enables>
					<Providers>rtmp,webrtc,srt</Providers>
					<Publishers>webrtc,hls,dash,lldash</Publishers>
				</Enables>
			</AdmissionWebhooks>

			<!-- Settings for applications -->
			<Applications>
				<Application>
					<Name>app</Name>
					<!-- Application type (live/vod) -->
					<Type>live</Type>
					<Providers>
						<!-- You have to enable the OVT provider 
						because you used the ovt scheme for configuring Origin. -->
						<OVT />
						<!-- If you set RTSP into Scheme, 
						you have to enable RTSPPull provider -->
						<!-- <RTSPPull /> -->
					</Providers>

					<Publishers>
						<AppWorkerCount>4</AppWorkerCount>
						<StreamWorkerCount>8</StreamWorkerCount>
						<LLHLS>
							<ChunkDuration>0.5</ChunkDuration>
							<SegmentDuration>6</SegmentDuration>
							<SegmentCount>10</SegmentCount>
							<CrossDomains>
								<Url>localhost</Url>
								<Url>localhost:3000</Url>
								<Url>localhost:8080</Url>
								<Url>localhost:8081</Url>
								<Url>localhost:8082</Url>
								<Url>localhost:8083</Url>
								<Url>localhost:8084</Url>
								<Url>localhost:8085</Url>
								<Url>zometv.com</Url>
								<Url>player.zometv.com</Url>
								<Url>*.ovenplayer.com</Url>
								<Url>https://www.hlsplayer.net</Url>
							</CrossDomains>
						</LLHLS>
						<!-- <HLS>
							<SegmentDuration>5</SegmentDuration>
							<SegmentCount>3</SegmentCount>
							<CrossDomains>
								<Url>localhost</Url>
								<Url>localhost:3000</Url>
								<Url>localhost:8080</Url>
								<Url>localhost:8081</Url>
								<Url>localhost:8082</Url>
								<Url>localhost:8083</Url>
								<Url>localhost:8084</Url>
								<Url>localhost:8085</Url>
								<Url>zometv.com</Url>
								<Url>player.zometv.com</Url>
								<Url>*.ovenplayer.com</Url>
								<Url>https://www.hlsplayer.net</Url>
							</CrossDomains>
						</HLS> -->
						<WebRTC>
							<Timeout>30000</Timeout>
							<Rtx>false</Rtx>
							<Ulpfec>false</Ulpfec>
							<JitterBuffer>false</JitterBuffer>
						</WebRTC>
					</Publishers>
				</Application>
			</Applications>
		</VirtualHost>
	</VirtualHosts>
</Server>