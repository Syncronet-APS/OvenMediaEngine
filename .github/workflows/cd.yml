name: continuous-delivery-to-gke

on:
  push:
    branches:
      - release

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: zometv
  GKE_ZONE: europe-west4-b

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout # gets repo
        uses: actions/checkout@v2
      - name: Set up QEMU # needed for docker
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with: # secrets are set in your github repo settings. The tokens can be generated here: https://hub.docker.com/settings/security
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push app image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: syncronet/zome-ome:latest # this needs to match the repo you created in docker
          args: "GPU=TRUE"

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/release'
    needs: build
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Configure Workload Identity Federation and generate an access token.
      # - id: "auth"
      #   name: "Authenticate to Google Cloud"
      #   uses: "google-github-actions/auth@v0"
      #   with:
      #     workload_identity_provider: "projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider"
      #     service_account: "my-service-account@my-project.iam.gserviceaccount.com"

      # Alternative option - authentication via credentials json
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      # Setup gcloud CLI
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      # Get the GKE credentials so we can deploy to the cluster
      - run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
      # Deploy sample image to the GKE cluster
      - name: Deploy
        run: |-
          kubectl rollout restart deployment/origin deployment/edge
          kubectl rollout status deployment/origin
          kubectl rollout status deployment/edge